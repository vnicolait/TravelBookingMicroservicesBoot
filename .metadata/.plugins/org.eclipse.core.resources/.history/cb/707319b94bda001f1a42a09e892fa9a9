package dto;

import com.model.FlightEntity;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.processing.Generated;
import org.springframework.stereotype.Component;

@Generated(
    value = "org.mapstruct.ap.MappingProcessor",
    date = "2025-01-24T12:03:30+0100",
    comments = "version: 1.6.0, compiler: javac, environment: Java 17.0.9 (Oracle Corporation)"
)
@Component
public class FlightMapperImpl implements FlightMapper {

    @Override
    public FlightDTO toDTO(FlightEntity flightEntity) {
        if ( flightEntity == null ) {
            return null;
        }

        FlightDTO flightDTO = new FlightDTO();

        if ( flightEntity.getDateTimeDeparture() != null ) {
            flightDTO.setStartDate( flightEntity.getDateTimeDeparture().toLocalDate() );
        }
        if ( flightEntity.getDateTimeArrival() != null ) {
            flightDTO.setEndDate( flightEntity.getDateTimeArrival().toLocalDate() );
        }
        flightDTO.setIdFlight( flightEntity.getIdFlight() );
        flightDTO.setOrigin( flightEntity.getOrigin() );
        flightDTO.setDestination( flightEntity.getDestination() );
        flightDTO.setPrice( flightEntity.getPrice() );
        flightDTO.setAvailableSeats( flightEntity.getAvailableSeats() );

        return flightDTO;
    }

    @Override
    public List<FlightDTO> toListDTO(List<FlightEntity> flightEntity) {
        if ( flightEntity == null ) {
            return null;
        }

        List<FlightDTO> list = new ArrayList<FlightDTO>( flightEntity.size() );
        for ( FlightEntity flightEntity1 : flightEntity ) {
            list.add( toDTO( flightEntity1 ) );
        }

        return list;
    }
}
